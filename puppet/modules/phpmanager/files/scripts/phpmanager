#!/bin/bash

# phpmanager
# A script to switch between different PHP versions

# Global variables:
BASENAME=$(basename $0)
SOURCE=/usr/local/src/php

usage() {
	echo "Usage: "
	echo "  $BASENAME list            -- List all available PHP tags"
	echo "  $BASENAME install <tag>   -- Build and install PHP version <tag>"
	exit 1
}

# Get the list of available versions
command_list() {
    cd $SOURCE

    TAGS=()
    eval "$(git for-each-ref --shell --format='TAGS+=(%(refname))' refs/tags/)"
    for TAG in "${TAGS[@]}"; do
        # Only list PHP versions greater than or equal to 5.2
        PATTERN="refs/tags/php-[5-9]\.[2-9]"
        if [[ $TAG =~ $PATTERN ]]; then
            echo ${TAG/refs\/tags\//}
        fi;
    done
}

# Build version
command_install() {
    VERSION=$1

    if [[ -z $VERSION ]] ; then
        echo "No PHP version given"
        usage
    fi;

    cd $SOURCE

    # Make sure the tag exists
    if ! git rev-parse $VERSION >/dev/null 2>&1
    then
        echo "$VERSION version not found"
        usage
    fi

    # Clean-up and checkout the tag
    make clean
    rm -rf configure
    ./vcsclean

    git reset --hard
    git clean -d -x -f

    git checkout $VERSION

    # Run configure
    ./buildconf --force

    OPTIONS="--enable-spl  \
             --with-xsl --with-curl"

    ./configure --prefix=/opt/php/${VERSION} ${OPTIONS}

    make
    sudo make install
}

# Determine the command and execute
SUBCOMMAND=$1
case $SUBCOMMAND in
    "" | "-h" | "--help")
        usage
        ;;
    *)
        shift
        command_${SUBCOMMAND} $@
        if [ $? = 127 ]; then
            echo "Error: '$SUBCOMMAND' is not a known command!" >&2
            usage
        fi
        ;;
esac